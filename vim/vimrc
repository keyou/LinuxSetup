set number
set showmatch
set nobackup
set noswapfile
set syntax=on

" change tab to 4 spaces
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

set hidden
set confirm

set scrolloff=10

set showcmd

" fix vim color in tmux
set background=dark
set t_Co=256

set tags=tags;
set noautochdir
let Tlist_auto_open=1

set nocompatible
highlight LineNr ctermfg=grey
set cursorline
highlight CursorLine cterm=NONE

" do not store global and local values in a session
set ssop-=options
" do not store folds in a session
set ssop-=folds  

let mapleader = ' '
noremap <Space> <Nop>

"Window splitting remap"
nnoremap <C-j> :bnext<CR>
nnoremap <C-k> :bprev<CR>

nnoremap <C-h> <C-w>w
nnoremap <C-l> <C-w>W
:imap jj <Esc>
"inoremap <C-i> <Esc>
"inoremap <M-i> <Esc>

nnoremap <C-x> :bd<CR>

" Use ; for : in normal and visual mode, less keystrokes
nnoremap ; :
vnoremap ; :

nnoremap <silent> <C-s> :<C-u>update<CR>
vnoremap <silent> <C-s> <C-C>:update<CR>
inoremap <silent> <C-s> <C-C>:update<CR>

nnoremap <Space>p <C-u>
nnoremap <Space>n <C-d>



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"PlugIn
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

Plug 'haya14busa/incsearch.vim'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-scripts/taglist.vim'
Plug 'edkolev/tmuxline.vim'
"Plug 'ctrlpvim/ctrlp.vim'
Plug 'vim-scripts/Conque-GDB'

" PlugInstall and PlugUpdate will clone fzf in ~/.fzf and run install script
" Both options are optional. You don't have to install fzf in ~/.fzf
" and you don't have to run install script if you use fzf only in Vim.
Plug 'junegunn/fzf', {'do': './install --all' }

"Plug 'bling/vim-bufferline'

"Plug 'derekwyatt/vim-fswitch'
Plug 'ericcurtin/CurtineIncSw.vim'

"Plug 'Valloric/YouCompleteMe', {'do': './install.py --clang-completer'}
Plug 'Rip-Rip/clang_complete', {'do': 'make install'}

" Rg
Plug 'yegappan/grep'

" Gtags
Plug 'aceofall/gtags.vim'

Plug 'octol/vim-cpp-enhanced-highlight'

" Initialize plugin system
call plug#end()

map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)
set hlsearch
let g:incsearch#auto_nohlsearch = 1
map n  <Plug>(incsearch-nohl-n)
map N  <Plug>(incsearch-nohl-N)
map *  <Plug>(incsearch-nohl-*)
map #  <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)

let g:airline#extensions#tabline#enabled = 1

let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline_powerline_fonts=1
let g:airline_theme = 'papercolor'
let g:airline#extensions#tmuxline#enabled = 1
"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = '|'

"let g:bufferline_show_bufnr = 1
"let g:bufferline_echo = 0

let g:ctrlp_working_path_mode = 'ra'
"let g:ctrlp_user_command = 'find %s -type f'
let g:ctrlp_user_command = 'fd --type f --hidden --follow --exclude .git'


"Disable ConqueTerm F1-F12 quick keys
let g:ConqueTerm_ToggleKey = ''
let g:ConqueTerm_SendVisKey = ''
let g:ConqueTerm_SendFileKey = ''
let g:ConqueTerm_ExecFileKey = ''
let g:ConqueTerm_CWInsert = 1 

"nnoremap <F5> :ConqueGdbCommand continue<CR>
"nnoremap <F6> :ConqueGdbCommand run<CR>
"map <F9> \b
"nnoremap <F10> :ConqueGdbCommand next<CR>
"nnoremap <F11> :ConqueGdbCommand step<CR>
"nnoremap <F12> :ConqueGdbCommand finish<CR>

"FZF
nnoremap <C-f> :FZF<CR>

"vim beakpoint format to clipboard
func! CopyAsBreakpoint()
    let s:pos=expand('%:p') . ':' . line('.')
    call system("xclip", s:pos)
 endfunc
" map to a key
"map kk <ESC>:call CopyAsBreakpoint()<CR>

"clang_complete
"path to directory where library can be found
let g:clang_library_path='/usr/lib/llvm-6.0/lib/libclang.so.1'
let g:clang_periodic_quickfix=0
let g:clang_complete_copen=1
let g:clang_use_library=1
"let g:clang_auto_user_options="compile_commands.json, .clang_complete, path"

"gtags
:nmap <C-n> :cn<CR>
:nmap <C-p> :cp<CR>
:nmap <C-c><C-d> :GtagsCursor<CR>
:nmap <C-c><C-c> :cclose<CR>
:nmap <C-c><C-o> :copen<CR>

"vim-cpp-enhanced-highlight
let g:cpp_member_variable_highlight = 1


